// Bounce —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ –¥–æ —É–ø–æ—Ä–∞
class BounceScroll {
  constructor() {
    this.isScrolling = false;
    this.scrollTimeout = null;
    this.lastScrollTop = 0;
    this.velocityThreshold = 5; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è bounce
    this.bounceDistance = 20; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ bounce –≤ –ø–∏–∫—Å–µ–ª—è—Ö
    this.isAnimating = false;
    this.reducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
    this.isMobile = this.detectMobile();
    
    // –û—Ç–∫–ª—é—á–∞–µ–º bounce –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –∏–ª–∏ –ø—Ä–∏ reduced motion
    if (!this.isMobile || this.reducedMotion) return;
    
    this.init();
  }

  // –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  detectMobile() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º user agent
    const userAgent = navigator.userAgent || navigator.vendor || window.opera;
    const mobileRegex = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º touch support
    const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞ (—Å—á–∏—Ç–∞–µ–º –ø–ª–∞–Ω—à–µ—Ç—ã –º–æ–±–∏–ª—å–Ω—ã–º–∏)
    const isSmallScreen = window.innerWidth <= 1024;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º media query –¥–ª—è hover (–Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –æ–±—ã—á–Ω–æ hover: none)
    const hasHover = window.matchMedia('(hover: hover)').matches;
    
    return mobileRegex.test(userAgent) || (hasTouch && isSmallScreen) || !hasHover;
  }

  init() {
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    window.addEventListener('scroll', this.handleScroll.bind(this), { passive: false });
    window.addEventListener('touchstart', this.handleTouchStart.bind(this), { passive: true });
    window.addEventListener('touchmove', this.handleTouchMove.bind(this), { passive: false });
    window.addEventListener('touchend', this.handleTouchEnd.bind(this), { passive: true });
    window.addEventListener('wheel', this.handleWheel.bind(this), { passive: false });
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è touch —Å–æ–±—ã—Ç–∏–π
    this.touchStartY = 0;
    this.touchCurrentY = 0;
    this.isTouching = false;
    this.touchVelocity = 0;
    this.lastTouchTime = 0;
  }

  handleScroll(e) {
    if (this.isAnimating || this.reducedMotion || !this.isMobile) {
      if (this.isAnimating) e.preventDefault();
      return;
    }

    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    const scrollHeight = document.documentElement.scrollHeight;
    const clientHeight = window.innerHeight;
    const isAtTop = scrollTop <= 0;
    const isAtBottom = scrollTop + clientHeight >= scrollHeight - 1;

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    const velocity = Math.abs(scrollTop - this.lastScrollTop);
    this.lastScrollTop = scrollTop;

    // –ó–∞–ø—É—Å–∫–∞–µ–º bounce –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–∫—Ä—É—Ç–∏–ª –¥–æ —É–ø–æ—Ä–∞ —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
    if ((isAtTop || isAtBottom) && velocity > this.velocityThreshold && !this.isScrolling) {
      this.triggerBounce(isAtTop ? 'top' : 'bottom', velocity);
    }
  }

  handleTouchStart(e) {
    this.isTouching = true;
    this.touchStartY = e.touches[0].clientY;
    this.touchCurrentY = this.touchStartY;
    this.lastTouchTime = Date.now();
  }

  handleTouchMove(e) {
    if (!this.isTouching || this.isAnimating || this.reducedMotion || !this.isMobile) return;

    this.touchCurrentY = e.touches[0].clientY;
    const now = Date.now();
    const deltaY = this.touchCurrentY - this.touchStartY;
    const deltaTime = now - this.lastTouchTime;
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
    this.touchVelocity = Math.abs(deltaY / deltaTime);
    this.lastTouchTime = now;

    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    const scrollHeight = document.documentElement.scrollHeight;
    const clientHeight = window.innerHeight;
    const isAtTop = scrollTop <= 0;
    const isAtBottom = scrollTop + clientHeight >= scrollHeight - 1;

    // –ï—Å–ª–∏ –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
    if ((isAtTop && deltaY > 0) || (isAtBottom && deltaY < 0)) {
      // –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è
      const resistance = Math.min(Math.abs(deltaY) / 100, 0.5);
      if (resistance > 0.1) {
        e.preventDefault();
        this.applyResistance(deltaY > 0 ? 'top' : 'bottom', resistance);
      }
    }
  }

  handleTouchEnd(e) {
    if (!this.isTouching || this.reducedMotion || !this.isMobile) return;
    
    this.isTouching = false;
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    const scrollHeight = document.documentElement.scrollHeight;
    const clientHeight = window.innerHeight;
    const isAtTop = scrollTop <= 0;
    const isAtBottom = scrollTop + clientHeight >= scrollHeight - 1;

    // –ï—Å–ª–∏ –±—ã–ª–∞ –ø–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å –≤—ã—Å–æ–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
    if ((isAtTop || isAtBottom) && this.touchVelocity > 0.5) {
      this.triggerBounce(isAtTop ? 'top' : 'bottom', this.touchVelocity * 20);
    }

    // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è
    this.resetTransform();
  }

  handleWheel(e) {
    // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º bounce —ç—Ñ—Ñ–µ–∫—Ç
    if (!this.isMobile || this.isAnimating || this.reducedMotion) {
      if (this.isAnimating) e.preventDefault();
      return;
    }

    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    const scrollHeight = document.documentElement.scrollHeight;
    const clientHeight = window.innerHeight;
    const isAtTop = scrollTop <= 0;
    const isAtBottom = scrollTop + clientHeight >= scrollHeight - 1;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫–æ–ª–µ—Å–∞
    const deltaY = e.deltaY;
    const velocity = Math.abs(deltaY);

    if ((isAtTop && deltaY < 0) || (isAtBottom && deltaY > 0)) {
      if (velocity > 50) { // –ü–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–æ–ª–µ—Å–∞ –º—ã—à–∏
        e.preventDefault();
        this.triggerBounce(deltaY < 0 ? 'top' : 'bottom', velocity / 10);
      }
    }
  }

  applyResistance(direction, intensity) {
    const body = document.body;
    const translateY = direction === 'top' ? 
      Math.min(intensity * this.bounceDistance, this.bounceDistance) : 
      -Math.min(intensity * this.bounceDistance, this.bounceDistance);
    
    body.classList.add('bounce-scrolling');
    body.style.transition = 'transform 0.1s ease-out';
    body.style.transform = `translateY(${translateY}px)`;
  }

  triggerBounce(direction, velocity) {
    if (this.isAnimating || this.reducedMotion || !this.isMobile) return;
    
    this.isAnimating = true;
    const body = document.body;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    body.classList.add('bounce-scrolling');
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Å–∏–ª—É bounce –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
    const bounceIntensity = Math.min(velocity / 10, 1);
    const maxBounce = this.bounceDistance * bounceIntensity;
    
    const translateY = direction === 'top' ? maxBounce : -maxBounce;
    
    // –§–∞–∑–∞ 1: Bounce
    body.style.transition = 'transform 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
    body.style.transform = `translateY(${translateY}px)`;
    
    // –§–∞–∑–∞ 2: –í–æ–∑–≤—Ä–∞—Ç –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
    setTimeout(() => {
      body.style.transition = 'transform 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
      body.style.transform = 'translateY(0px)';
      
      // –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
      setTimeout(() => {
        this.resetTransform();
        this.isAnimating = false;
      }, 250);
    }, 150);
  }

  resetTransform() {
    const body = document.body;
    body.style.transition = '';
    body.style.transform = '';
    body.classList.remove('bounce-scrolling');
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è bounce —ç—Ñ—Ñ–µ–∫—Ç–∞
  toggle(enabled = true) {
    if (enabled) {
      if (!this.enabled) {
        this.init();
        this.enabled = true;
      }
    } else {
      this.resetTransform();
      this.enabled = false;
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è bounce scroll
document.addEventListener('DOMContentLoaded', () => {
  // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤ iframe (–∏–∑–±–µ–≥–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤)
  if (window.self === window.top) {
    window.bounceScroll = new BounceScroll();
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const bounceScroll = window.bounceScroll;
    if (bounceScroll && bounceScroll.isMobile !== undefined) {
      console.log('üéæ Bounce Scroll:', bounceScroll.isMobile ? '–≤–∫–ª—é—á–µ–Ω (–º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)' : '–æ—Ç–∫–ª—é—á–µ–Ω (–¥–µ—Å–∫—Ç–æ–ø)');
    }
  }
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
window.BounceScroll = BounceScroll; 