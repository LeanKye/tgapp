// –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è (drag & drop / swipe)
class ModalManager {
  constructor() {
    this.activeModal = null;
    this.isDragging = false;
    this.startY = 0;
    this.currentY = 0;
    this.startTime = 0;
    this.velocity = 0;
    this.modalHeight = 0;
    this.screenHeight = 0;
    this.closeThreshold = 0.15; // 15% –æ—Ç –≤—ã—Å–æ—Ç—ã —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è (–±–æ–ª–µ–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ)
    this.velocityThreshold = 0.3; // –°–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–º —Å–≤–∞–π–ø–µ (–±–æ–ª–µ–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ)
    
    this.init();
  }

  init() {
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    this.createLabelModal();
    this.createWebMoneyModal();
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ª–µ–π–±–ª–æ–≤
  createLabelModal() {
    if (document.getElementById('label-modal')) return;

    const modalHTML = `
      <div id="label-modal" class="modal-overlay">
        <div class="modal-content">
          <div class="modal-header">
            <div id="modal-icon" class="modal-icon">üí°</div>
            <h3 id="modal-title" class="modal-title">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          </div>
          <div class="modal-body">
            <p id="modal-text" class="modal-text">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          </div>
          <div class="modal-footer">
            <button id="modal-close" class="modal-close">–ü–æ–Ω—è—Ç–Ω–æ</button>
          </div>
        </div>
      </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);
    this.setupModalEvents('label-modal');
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ WebMoney
  createWebMoneyModal() {
    if (document.getElementById('webmoney-modal')) return;

    const modalHTML = `
      <div id="webmoney-modal" class="webmoney-modal-overlay">
        <div class="webmoney-modal">
          <div class="webmoney-modal-header">
            <h3>–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ WebMoney</h3>
            <button class="webmoney-modal-close" aria-label="–ó–∞–∫—Ä—ã—Ç—å">&times;</button>
          </div>
          <div class="webmoney-modal-body">
            <div class="payment-details">
              <div class="payment-item">
                <span>–¢–æ–≤–∞—Ä:</span>
                <span id="modal-product-title">-</span>
              </div>
              <div class="payment-item">
                <span>–°–ø–æ—Å–æ–± –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:</span>
                <span id="modal-variant">-</span>
              </div>
              <div class="payment-item">
                <span>–ü–µ—Ä–∏–æ–¥:</span>
                <span id="modal-period">-</span>
              </div>
              <div class="payment-item">
                <span>–ü–ª–∞–Ω:</span>
                <span id="modal-edition">-</span>
              </div>
              <div class="payment-item total">
                <span>–ò—Ç–æ–≥–æ:</span>
                <span id="modal-price">-</span>
              </div>
            </div>
            <div class="webmoney-widget-container">
              <div id="wm-widget"></div>
            </div>
          </div>
        </div>
      </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);
    this.setupModalEvents('webmoney-modal');
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  setupModalEvents(modalId) {
    const modal = document.getElementById(modalId);
    const content = modal.querySelector('.modal-content, .webmoney-modal');
    
    if (!modal || !content) {
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if (modal.dataset.eventsSetup === 'true') {
      return;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
    this.setupCloseEvents(modal, modalId);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ drag —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    if (modalId === 'label-modal') {
      this.setupDragEvents(modal, content);
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è WebMoney –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    if (modalId === 'webmoney-modal') {
      this.setupWebMoneyCloseEvents(modal);
    }

    // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
    modal.dataset.eventsSetup = 'true';
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  setupDragEvents(modal, content) {
    let isDragging = false;
    let startY = 0;
    let currentY = 0;
    let startTime = 0;
    let velocity = 0;
    let lastY = 0;
    let lastTime = 0;

    // Touch —Å–æ–±—ã—Ç–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    const handleTouchStart = (e) => {
      if (e.touches.length !== 1) return;
      
      isDragging = true;
      startY = e.touches[0].clientY;
      currentY = startY;
      startTime = Date.now();
      lastY = startY;
      lastTime = startTime;
      
      content.style.transition = 'none';
      modal.style.transition = 'none';
      modal.style.opacity = '1';
      modal.classList.add('dragging');
    };

    const handleTouchMove = (e) => {
      if (!isDragging) return;
      
      currentY = e.touches[0].clientY;
      const deltaY = currentY - startY;
      
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤–Ω–∏–∑
      if (deltaY > 0) {
        const translateY = Math.min(deltaY, window.innerHeight * 0.5);
        content.style.transform = `translateY(${translateY}px)`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
        const progress = Math.min(deltaY / (window.innerHeight * this.closeThreshold), 1);
        modal.style.opacity = 1 - (progress * 0.3); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å 0.7
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
        const now = Date.now();
        if (now - lastTime > 0) {
          velocity = (currentY - lastY) / (now - lastTime);
          lastY = currentY;
          lastTime = now;
        }
      }
      
      e.preventDefault();
    };

    const handleTouchEnd = () => {
      if (!isDragging) return;
      
      isDragging = false;
      const deltaY = currentY - startY;
      const deltaTime = Date.now() - startTime;
      const screenHeight = window.innerHeight;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      const shouldClose = deltaY > screenHeight * this.closeThreshold || 
                         (velocity > this.velocityThreshold && deltaY > 50);
      
      if (shouldClose) {
        this.closeModal(modal.id);
      } else {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        content.style.transition = 'transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        modal.style.transition = 'opacity 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        content.style.transform = 'translateY(0)';
        modal.style.opacity = '1';
        
        setTimeout(() => {
          modal.classList.remove('dragging');
        }, 300);
      }
    };

    // Mouse —Å–æ–±—ã—Ç–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
    const handleMouseDown = (e) => {
      if (e.button !== 0) return; // –¢–æ–ª—å–∫–æ –ª–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
      
      isDragging = true;
      startY = e.clientY;
      currentY = startY;
      startTime = Date.now();
      lastY = startY;
      lastTime = startTime;
      
      content.style.transition = 'none';
      modal.style.transition = 'none';
      modal.style.opacity = '1';
      modal.classList.add('dragging');
      
      document.addEventListener('mousemove', handleMouseMove);
      document.addEventListener('mouseup', handleMouseUp);
    };

    const handleMouseMove = (e) => {
      if (!isDragging) return;
      
      currentY = e.clientY;
      const deltaY = currentY - startY;
      
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤–Ω–∏–∑
      if (deltaY > 0) {
        const translateY = Math.min(deltaY, window.innerHeight * 0.5);
        content.style.transform = `translateY(${translateY}px)`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
        const progress = Math.min(deltaY / (window.innerHeight * this.closeThreshold), 1);
        modal.style.opacity = 1 - (progress * 0.3); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å 0.7
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
        const now = Date.now();
        if (now - lastTime > 0) {
          velocity = (currentY - lastY) / (now - lastTime);
          lastY = currentY;
          lastTime = now;
        }
      }
    };

    const handleMouseUp = () => {
      if (!isDragging) return;
      
      isDragging = false;
      const deltaY = currentY - startY;
      const screenHeight = window.innerHeight;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      const shouldClose = deltaY > screenHeight * this.closeThreshold || 
                         (velocity > this.velocityThreshold && deltaY > 50);
      
      if (shouldClose) {
        this.closeModal(modal.id);
      } else {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        content.style.transition = 'transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        modal.style.transition = 'opacity 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        content.style.transform = 'translateY(0)';
        modal.style.opacity = '1';
        
        setTimeout(() => {
          modal.classList.remove('dragging');
        }, 300);
      }
      
      document.removeEventListener('mousemove', handleMouseMove);
      document.removeEventListener('mouseup', handleMouseUp);
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    content.addEventListener('touchstart', handleTouchStart, { passive: false });
    content.addEventListener('touchmove', handleTouchMove, { passive: false });
    content.addEventListener('touchend', handleTouchEnd, { passive: true });
    content.addEventListener('mousedown', handleMouseDown);
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π –∑–∞–∫—Ä—ã—Ç–∏—è
  setupCloseEvents(modal, modalId) {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        this.closeModal(modalId);
      }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞–≤–∏—à–µ Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && modal.classList.contains('show')) {
        this.closeModal(modalId);
      }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–æ–Ω—è—Ç–Ω–æ" (—Ç–æ–ª—å–∫–æ –¥–ª—è label-modal)
    if (modalId === 'label-modal') {
      const closeBtn = modal.querySelector('#modal-close');
      if (closeBtn) {
        closeBtn.addEventListener('click', () => {
          this.closeModal(modalId);
        });
      }
    }
  }

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–ª—è WebMoney –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  setupWebMoneyCloseEvents(modal) {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
    const closeBtn = modal.querySelector('.webmoney-modal-close');
    if (closeBtn) {
      closeBtn.addEventListener('click', () => {
        this.closeModal('webmoney-modal');
      });
    }
  }

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  openModal(modalId, data = {}) {
    const modal = document.getElementById(modalId);
    if (!modal) {
      return;
    }

    this.activeModal = modalId;

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è label-modal
    if (modalId === 'label-modal' && data.labelInfo) {
      const icon = modal.querySelector('#modal-icon');
      const title = modal.querySelector('#modal-title');
      const text = modal.querySelector('#modal-text');

      if (icon && title && text) {
        icon.textContent = data.labelInfo.icon;
        icon.className = `modal-icon ${data.labelInfo.iconClass}`;
        title.textContent = data.labelInfo.title;
        text.textContent = data.labelInfo.description;
      }
    }

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è webmoney-modal
    if (modalId === 'webmoney-modal' && data.paymentData) {
      const productTitle = modal.querySelector('#modal-product-title');
      const variant = modal.querySelector('#modal-variant');
      const period = modal.querySelector('#modal-period');
      const edition = modal.querySelector('#modal-edition');
      const price = modal.querySelector('#modal-price');

      if (productTitle && variant && period && edition && price) {
        productTitle.textContent = data.paymentData.productTitle || '-';
        variant.textContent = data.paymentData.variant || '-';
        period.textContent = data.paymentData.period || '-';
        edition.textContent = data.paymentData.edition || '-';
        price.innerHTML = data.paymentData.price || '-';
      }
    }

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.body.classList.add('modal-open');
    document.body.style.overflow = 'hidden';

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é
    modal.style.opacity = '1';
    modal.style.transition = '';
    const content = modal.querySelector('.modal-content, .webmoney-modal');
    if (content) {
      content.style.transform = '';
      content.style.transition = '';
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.add('show');

    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
    this.setupModalEvents(modalId);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebMoney –≤–∏–¥–∂–µ—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if (modalId === 'webmoney-modal' && data.paymentData) {
      this.initWebMoneyWidget(data.paymentData);
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (!modal) {
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (modal.classList.contains('closing')) {
      return;
    }

    // –ü–æ–º–µ—á–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–∞–∫ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–µ—Å—è
    modal.classList.add('closing');

    // –°—Ä–∞–∑—É —É–±–∏—Ä–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    document.body.classList.remove('modal-open');
    document.body.style.overflow = '';

    // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.remove('show');

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
    const content = modal.querySelector('.modal-content, .webmoney-modal');
    if (content) {
      content.style.transform = '';
      content.style.transition = '';
    }
    modal.style.opacity = '';
    modal.style.transition = '';

    // –û—á–∏—â–∞–µ–º WebMoney –≤–∏–¥–∂–µ—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if (modalId === 'webmoney-modal') {
      const widgetContainer = document.getElementById('wm-widget');
      if (widgetContainer) {
        widgetContainer.innerHTML = '';
      }
    }

    this.activeModal = null;
    modal.classList.remove('closing');
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebMoney –≤–∏–¥–∂–µ—Ç–∞
  initWebMoneyWidget(paymentData) {
    const widgetContainer = document.getElementById('wm-widget');
    if (!widgetContainer) return;

    widgetContainer.innerHTML = '';

    // –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    const description = `${paymentData.productTitle} - ${paymentData.variant}, ${paymentData.period}, ${paymentData.edition}`;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –∑–∞–∫–∞–∑–∞
    const orderId = this.generateOrderId();
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ amount —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
    const numericAmount = Number(paymentData.amount);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebMoney –≤–∏–¥–∂–µ—Ç–∞:', {
      paymentData,
      orderId,
      numericAmount,
      webmoneyAvailable: !!window.webmoney,
      widgetsAvailable: !!(window.webmoney && window.webmoney.widgets)
    });
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è fallback –∫–Ω–æ–ø–∫–∏
    const createFallbackButton = () => {
      widgetContainer.innerHTML = `
        <div style="color: #888; text-align: center; padding: 20px;">
          <div style="margin-bottom: 15px;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞</div>
          <button id="fallback-pay-button" style="
            background: #007AFF;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            width: 100%;
            max-width: 200px;
          ">–û–ø–ª–∞—Ç–∏—Ç—å ${numericAmount} ‚ÇΩ</button>
        </div>
      `;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è fallback –∫–Ω–æ–ø–∫–∏
      const fallbackButton = document.getElementById('fallback-pay-button');
      if (fallbackButton) {
        fallbackButton.addEventListener('click', () => {
          const result = {
            orderId: orderId,
            amount: numericAmount,
            description: description,
            webmoneyData: { fallback: true }
          };
          
          this.closeModal('webmoney-modal');
          this.handlePaymentSuccess(result, paymentData);
        });
      }
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–∞
    const createWidget = () => {
      if (window.webmoney && window.webmoney.widgets) {
        const widgetConfig = {
          "data": {
            "amount": numericAmount,
            "purse": "T231993574772",
            "desc": description,
            "paymentType": "wm",
            "lmi_payment_no": orderId,
            "forcePay": true,
            "lmi_currency": "RUB",
            "lmi_currency_code": "RUB",
            "test": true
          },
          "style": {
            "theme": "wm",
            "showAmount": true,
            "titleNum": 1,
            "title": "",
            "design": "flat"
          },
          "lang": "ru"
        };
        
        console.log('–°–æ–∑–¥–∞–Ω–∏–µ WebMoney –≤–∏–¥–∂–µ—Ç–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π:', widgetConfig);
        
        try {
          window.webmoney.widgets().button.create(widgetConfig).on('paymentComplete', (data) => {
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É
            const result = {
              orderId: orderId,
              amount: numericAmount,
              description: description,
              webmoneyData: data
            };
            
            this.closeModal('webmoney-modal');
            this.handlePaymentSuccess(result, paymentData);
          }).mount('wm-widget');
          
          console.log('WebMoney –≤–∏–¥–∂–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ WebMoney –≤–∏–¥–∂–µ—Ç–∞:', error);
          createFallbackButton();
        }
      } else {
        console.warn('WebMoney –≤–∏–¥–∂–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        createFallbackButton();
      }
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ WebMoney –≤–∏–¥–∂–µ—Ç
    if (window.webmoney && window.webmoney.widgets) {
      console.log('WebMoney –≤–∏–¥–∂–µ—Ç —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç');
      createWidget();
    } else {
      console.log('WebMoney –≤–∏–¥–∂–µ—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –∫–Ω–æ–ø–∫—É –∏ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å...');
      
      // –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∂–¥–∞–ª
      createFallbackButton();
      
      // –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ WebMoney —Å–∫—Ä–∏–ø—Ç–∞
      if (!window.webmoney) {
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ WebMoney —Å–∫—Ä–∏–ø—Ç–∞');
        const script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'https://merchant.web.money/conf/lib/widgets/wmApp.js?v=1.6';
        script.onload = () => {
          console.log('WebMoney —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
          setTimeout(() => {
            if (window.webmoney && window.webmoney.widgets) {
              console.log('WebMoney –≤–∏–¥–∂–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏');
              // –ó–∞–º–µ–Ω—è–µ–º fallback –∫–Ω–æ–ø–∫—É –Ω–∞ WebMoney –≤–∏–¥–∂–µ—Ç
              createWidget();
            } else {
              console.log('WebMoney –≤–∏–¥–∂–µ—Ç –≤—Å–µ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏');
            }
          }, 1000);
        };
        script.onerror = () => {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ WebMoney —Å–∫—Ä–∏–ø—Ç–∞');
        };
        document.head.appendChild(script);
      }
      
      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ WebMoney –≤–∏–¥–∂–µ—Ç–∞
      let attempts = 0;
      const maxAttempts = 15; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
      
      const checkWebMoney = setInterval(() => {
        attempts++;
        console.log(`–ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts} –∑–∞–≥—Ä—É–∑–∫–∏ WebMoney –≤–∏–¥–∂–µ—Ç–∞`);
        
        if (window.webmoney && window.webmoney.widgets) {
          clearInterval(checkWebMoney);
          console.log('WebMoney –≤–∏–¥–∂–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–º–µ–Ω—è–µ–º fallback –∫–Ω–æ–ø–∫—É');
          createWidget();
        } else if (attempts >= maxAttempts) {
          clearInterval(checkWebMoney);
          console.error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ WebMoney –≤–∏–¥–∂–µ—Ç–∞');
        }
      }, 300); // –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
  handlePaymentSuccess(result, paymentData) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
    this.showSuccess(`‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ó–∞–∫–∞–∑ #${result.orderId}`);
    
    console.log('–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω:', {
      result,
      paymentData
    });
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –∑–∞–∫–∞–∑–∞
  generateOrderId() {
    const timestamp = Date.now();
    const random = Math.floor(Math.random() * 1000);
    return `ORDER_${timestamp}_${random}`;
  }

  // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  showMessage(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      background: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : '#2196F3'};
      color: white;
      padding: 12px 24px;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 500;
      z-index: 30000;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
      animation: slideInDown 0.3s ease;
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.style.animation = 'slideOutUp 0.3s ease';
      setTimeout(() => {
        if (notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      }, 300);
    }, 3000);
  }

  showSuccess(message) {
    this.showMessage(message, 'success');
  }

  showError(message) {
    this.showMessage(message, 'error');
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–µ–π–±–ª–µ
  getLabelInfo(labelText) {
    const labelData = {
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': {
        title: '–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞',
        description: '–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –≤—Å–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã. –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é –ø—Ä–æ–¥—É–∫—Ç–∞, –º—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∑–∞–º–µ–Ω–∏–º –µ–≥–æ –∏–ª–∏ –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏.',
        icon: 'üõ°Ô∏è',
        iconClass: 'guarantee'
      },
      '–õ–∏—Ü–µ–Ω–∑–∏—è': {
        title: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è',
        description: '–í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ª–∏—Ü–µ–Ω–∑–∏—è–º–∏ –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–µ–≥–∞–ª—å–Ω—ã–π –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.',
        icon: 'üìú',
        iconClass: 'license'
      },
      '–ù—É–∂–µ–Ω VPN': {
        title: '–¢—Ä–µ–±—É–µ—Ç—Å—è VPN',
        description: '–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ. –≠—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–µ VPN-—Å–µ—Ä–≤–∏—Å—ã.',
        icon: 'üåê',
        iconClass: 'vpn'
      }
    };

    return labelData[labelText] || {
      title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
      description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ.',
      icon: 'üí°',
      iconClass: 'guarantee'
    };
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
export default ModalManager; 