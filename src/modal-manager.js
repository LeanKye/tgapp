// –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è (drag & drop / swipe)
class ModalManager {
  constructor() {
    this.activeModal = null;
    this.isDragging = false;
    this.startY = 0;
    this.currentY = 0;
    this.startTime = 0;
    this.velocity = 0;
    this.modalHeight = 0;
    this.screenHeight = 0;
    this.closeThreshold = 0.15; // 15% –æ—Ç –≤—ã—Å–æ—Ç—ã —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è (–±–æ–ª–µ–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ)
    this.velocityThreshold = 0.3; // –°–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–º —Å–≤–∞–π–ø–µ (–±–æ–ª–µ–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ)
    this.isScrollLocked = false;
    this.scrollY = 0;
    
    this.init();
  }

  // –§–∏–∫—Å–∞—Ü–∏—è —Å–∫—Ä–æ–ª–ª–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–∑–∏—Ü–∏–∏
  lockScroll() {
    if (this.isScrollLocked) return;
    this.scrollY = window.scrollY || window.pageYOffset || 0;
    document.body.classList.add('modal-open');
    document.body.style.position = 'fixed';
    document.body.style.top = `-${this.scrollY}px`;
    document.body.style.left = '0';
    document.body.style.right = '0';
    document.body.style.width = '100%';
    document.body.style.overflow = 'hidden';
    this.isScrollLocked = true;
  }

  // –°–Ω—è—Ç–∏–µ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∞
  unlockScroll() {
    if (!this.isScrollLocked) return;
    const scrollY = Math.abs(parseInt(document.body.style.top || '0', 10)) || 0;
    document.body.classList.remove('modal-open');
    document.body.style.position = '';
    document.body.style.top = '';
    document.body.style.left = '';
    document.body.style.right = '';
    document.body.style.width = '';
    document.body.style.overflow = '';
    this.isScrollLocked = false;
    window.scrollTo(0, scrollY);
  }

  init() {
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    this.createLabelModal();
    this.createCheckoutModal();
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ª–µ–π–±–ª–æ–≤
  createLabelModal() {
    if (document.getElementById('label-modal')) return;

    const modalHTML = `
      <div id="label-modal" class="modal-overlay">
        <div class="modal-content">
          <div class="modal-header">
            <div id="modal-icon" class="modal-icon">üí°</div>
            <h3 id="modal-title" class="modal-title">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          </div>
          <div class="modal-body">
            <p id="modal-text" class="modal-text">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          </div>
          <div class="modal-footer">
            <button id="modal-close" class="modal-close">–ü–æ–Ω—è—Ç–Ω–æ</button>
          </div>
        </div>
      </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);
    this.setupModalEvents('label-modal');
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
  createCheckoutModal() {
    if (document.getElementById('checkout-modal')) return;

    const modalHTML = `
      <div id="checkout-modal" class="checkout-modal-overlay">
        <div class="checkout-modal">
          <div class="checkout-modal-header">
            <h3>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h3>
            <button class="checkout-modal-close" aria-label="–ó–∞–∫—Ä—ã—Ç—å">&times;</button>
          </div>
          <div class="checkout-modal-body">
            <div class="payment-details">
              <div class="payment-item">
                <span>–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
                <span id="modal-product-title">-</span>
              </div>
              <div class="payment-item">
                <span>–°–ø–æ—Å–æ–± –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:</span>
                <span id="modal-variant">-</span>
              </div>
              <div class="payment-item">
                <span>–ü–µ—Ä–∏–æ–¥:</span>
                <span id="modal-period">-</span>
              </div>
              <div class="payment-item">
                <span>–ü–ª–∞–Ω:</span>
                <span id="modal-edition">-</span>
              </div>
              <div class="payment-item total">
                <span>–ò—Ç–æ–≥–æ:</span>
                <span id="modal-price">-</span>
              </div>
            </div>
            <div class="checkout-button-container">
              <button class="checkout-button" id="checkout-proceed-btn">–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</button>
            </div>
            <div class="payment-agreement-text">
              –ù–∞–∂–∏–º–∞—è ¬´–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ¬ª, —è –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è <a href="info.html#offer">–æ—Ñ–µ—Ä—Ç—ã</a> –∏ –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å <a href="info.html#privacy">–ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.
            </div>
          </div>
        </div>
      </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);
    this.setupModalEvents('checkout-modal');
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  setupModalEvents(modalId) {
    const modal = document.getElementById(modalId);
    const content = modal.querySelector('.modal-content, .checkout-modal');
    
    if (!modal || !content) {
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if (modal.dataset.eventsSetup === 'true') {
      return;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
    this.setupCloseEvents(modal, modalId);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ drag —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    if (modalId === 'label-modal' || modalId === 'checkout-modal') {
      this.setupDragEvents(modal, content);
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    if (modalId === 'checkout-modal') {
      this.setupCheckoutEvents(modal);
    }

    // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
    modal.dataset.eventsSetup = 'true';
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  setupDragEvents(modal, content) {
    let isDragging = false;
    let startY = 0;
    let currentY = 0;
    let startTime = 0;
    let velocity = 0;
    let lastY = 0;
    let lastTime = 0;
    let startedInsideScrollable = false;
    const baseAlpha = 0.5; // –±–∞–∑–æ–≤–æ–µ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –æ–≤–µ—Ä–ª–µ—è

    // Touch —Å–æ–±—ã—Ç–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    const handleTouchStart = (e) => {
      if (e.touches.length !== 1) return;
      // –ù–µ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º drag, –µ—Å–ª–∏ –∂–µ—Å—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö —Ñ—É—Ç–µ—Ä–∞ (–∫–Ω–æ–ø–∫–∞ "–ü–æ–Ω—è—Ç–Ω–æ" –∏ —Ç.–ø.)
      const noDragTarget = e.target.closest('.modal-footer, #modal-close, .checkout-button-container');
      if (noDragTarget) {
        return;
      }
      
      isDragging = true;
      startY = e.touches[0].clientY;
      currentY = startY;
      startTime = Date.now();
      lastY = startY;
      lastTime = startTime;
      startedInsideScrollable = false;
      
      content.style.transition = 'none';
      modal.style.transition = 'none';
      modal.style.opacity = '1';
      modal.classList.add('dragging');

      // –ï—Å–ª–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∂–µ—Å—Ç–∞ —Ü–µ–ª–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º—ã–π –∏ –æ–Ω –Ω–µ –Ω–∞ —Å–∞–º–æ–º –≤–µ—Ä—Ö—É, –Ω–µ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º drag –º–æ–¥–∞–ª–∫–∏
      const target = e.target.closest('.modal-content, .checkout-modal');
      if (target) {
        const scrollable = e.target.closest('.modal-body, .checkout-modal-body, .modal-content, .checkout-modal');
        if (scrollable && scrollable.scrollHeight > scrollable.clientHeight && scrollable.scrollTop > 0) {
          startedInsideScrollable = true;
        }
      }
    };

    const handleTouchMove = (e) => {
      if (!isDragging) return;
      if (startedInsideScrollable) return; // –î–∞—ë–º –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—Ç—å—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –≤–Ω—É—Ç—Ä–∏
      
      currentY = e.touches[0].clientY;
      const deltaY = currentY - startY;
      
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤–Ω–∏–∑
      if (deltaY > 0) {
        const translateY = Math.min(deltaY, window.innerHeight * 0.5);
        content.style.setProperty('transform', `translateY(${translateY}px)`, 'important');
        // –ß–µ–º –Ω–∏–∂–µ –º–æ–¥–∞–ª–∫–∞, —Ç–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–µ–µ —Ñ–æ–Ω
        const contentHeight = content.offsetHeight || Math.min(window.innerHeight * 0.7, window.innerHeight);
        const progressDown = Math.min(1, translateY / contentHeight);
        const overlayAlpha = baseAlpha * (1 - progressDown);
        modal.style.background = `rgba(0, 0, 0, ${overlayAlpha})`;
        
        // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ç—è–≥–∏–≤–∞–Ω–∏–∏
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
        const now = Date.now();
        if (now - lastTime > 0) {
          velocity = (currentY - lastY) / (now - lastTime);
          lastY = currentY;
          lastTime = now;
        }
      }
      
      e.preventDefault();
    };

    const handleTouchEnd = () => {
      if (!isDragging) return;
      
      isDragging = false;
      const deltaY = currentY - startY;
      const deltaTime = Date.now() - startTime;
      const screenHeight = window.innerHeight;
      
      if (startedInsideScrollable) {
        // –ù–µ –±—ã–ª–æ drag –º–æ–¥–∞–ª–∫–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        startedInsideScrollable = false;
        modal.classList.remove('dragging');
        return;
      }

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      const shouldClose = deltaY > screenHeight * this.closeThreshold || 
                         (velocity > this.velocityThreshold && deltaY > 50);
      
      if (shouldClose) {
        this.closeDragModal(modal, content, deltaY);
      } else {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å JavaScript –∞–Ω–∏–º–∞—Ü–∏–µ–π
        modal.classList.remove('dragging');
        this.animateModalReturn(modal, content, deltaY);
      }
    };

    // Mouse —Å–æ–±—ã—Ç–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
    const handleMouseDown = (e) => {
      if (e.button !== 0) return; // –¢–æ–ª—å–∫–æ –ª–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
      // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å—Ç–∞—Ä—Ç drag –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏/—ç–ª–µ–º–µ–Ω—Ç—ã —Ñ—É—Ç–µ—Ä–∞
      const noDragTarget = e.target.closest('.modal-footer, #modal-close, .checkout-button-container');
      if (noDragTarget) {
        return;
      }
      
      isDragging = true;
      startY = e.clientY;
      currentY = startY;
      startTime = Date.now();
      lastY = startY;
      lastTime = startTime;
      startedInsideScrollable = false;
      
      content.style.transition = 'none';
      modal.style.transition = 'none';
      modal.style.opacity = '1';
      modal.classList.add('dragging');
      
      document.addEventListener('mousemove', handleMouseMove);
      document.addEventListener('mouseup', handleMouseUp);
    };

    const handleMouseMove = (e) => {
      if (!isDragging) return;
      
      currentY = e.clientY;
      const deltaY = currentY - startY;
      
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤–Ω–∏–∑
      if (deltaY > 0) {
        const translateY = Math.min(deltaY, window.innerHeight * 0.5);
        content.style.setProperty('transform', `translateY(${translateY}px)`, 'important');
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –¥–ª—è desktop drag
        const contentHeight = content.offsetHeight || Math.min(window.innerHeight * 0.7, window.innerHeight);
        const progressDown = Math.min(1, translateY / contentHeight);
        const overlayAlpha = baseAlpha * (1 - progressDown);
        modal.style.background = `rgba(0, 0, 0, ${overlayAlpha})`;
        
        // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ç—è–≥–∏–≤–∞–Ω–∏–∏
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
        const now = Date.now();
        if (now - lastTime > 0) {
          velocity = (currentY - lastY) / (now - lastTime);
          lastY = currentY;
          lastTime = now;
        }
      }
    };

    const handleMouseUp = () => {
      if (!isDragging) return;
      
      isDragging = false;
      const deltaY = currentY - startY;
      const screenHeight = window.innerHeight;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      const shouldClose = deltaY > screenHeight * this.closeThreshold || 
                         (velocity > this.velocityThreshold && deltaY > 50);
      
      if (shouldClose) {
        this.closeDragModal(modal, content, deltaY);
      } else {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å JavaScript –∞–Ω–∏–º–∞—Ü–∏–µ–π
        modal.classList.remove('dragging');
        this.animateModalReturn(modal, content, deltaY);
      }
      
      document.removeEventListener('mousemove', handleMouseMove);
      document.removeEventListener('mouseup', handleMouseUp);
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    content.addEventListener('touchstart', handleTouchStart, { passive: false });
    content.addEventListener('touchmove', handleTouchMove, { passive: false });
    content.addEventListener('touchend', handleTouchEnd, { passive: true });
    content.addEventListener('mousedown', handleMouseDown);
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π –∑–∞–∫—Ä—ã—Ç–∏—è
  setupCloseEvents(modal, modalId) {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏–π click —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è)
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        if (modal.dataset.justOpened) return;
        this.closeModal(modalId);
      }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞–≤–∏—à–µ Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && modal.classList.contains('show')) {
        this.closeModal(modalId);
      }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–æ–Ω—è—Ç–Ω–æ" (—Ç–æ–ª—å–∫–æ –¥–ª—è label-modal)
    if (modalId === 'label-modal') {
      const closeBtn = modal.querySelector('#modal-close');
      if (closeBtn) {
        closeBtn.addEventListener('click', () => {
          this.closeModal(modalId);
        });
      }
    }
  }

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
  setupCheckoutEvents(modal) {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
    const closeBtn = modal.querySelector('.checkout-modal-close');
    if (closeBtn) {
      closeBtn.addEventListener('click', () => {
        this.closeModal('checkout-modal');
      });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é"
    const checkoutBtn = modal.querySelector('#checkout-proceed-btn');
    if (checkoutBtn) {
      checkoutBtn.addEventListener('click', () => {
        this.handleCheckoutProceed();
      });
    }
  }

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  openModal(modalId, data = {}) {
    const modal = document.getElementById(modalId);
    if (!modal) {
      return;
    }

    this.activeModal = modalId;

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è label-modal
    if (modalId === 'label-modal' && data.labelInfo) {
      const icon = modal.querySelector('#modal-icon');
      const title = modal.querySelector('#modal-title');
      const text = modal.querySelector('#modal-text');

      if (icon && title && text) {
        icon.textContent = data.labelInfo.icon;
        icon.className = `modal-icon ${data.labelInfo.iconClass}`;
        title.textContent = data.labelInfo.title;
        text.textContent = data.labelInfo.description;
      }
    }

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è checkout-modal
    if (modalId === 'checkout-modal' && data.paymentData) {
      const productTitle = modal.querySelector('#modal-product-title');
      const variant = modal.querySelector('#modal-variant');
      const period = modal.querySelector('#modal-period');
      const edition = modal.querySelector('#modal-edition');
      const price = modal.querySelector('#modal-price');

      if (productTitle && variant && period && edition && price) {
        productTitle.textContent = data.paymentData.productTitle || '-';
        variant.textContent = data.paymentData.variant || '-';
        period.textContent = data.paymentData.period || '-';
        edition.textContent = data.paymentData.edition || '-';
        price.innerHTML = data.paymentData.price || '-';
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      this.currentPaymentData = data.paymentData;
    }

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–∑–∏—Ü–∏–∏
    this.lockScroll();

    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
    this.setupModalEvents(modalId);

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–¥–∏–Ω —Å–ª–µ–¥—É—é—â–∏–π click –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è (—Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏–π –ø–æ—Å–ª–µ pointerup)
    try {
      modal.dataset.justOpened = '1';
      setTimeout(() => { try { delete modal.dataset.justOpened; } catch {} }, 250);
    } catch {}

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    if (modalId === 'checkout-modal') {
      this.animateCheckoutModalOpen(modal);
    } else if (modalId === 'label-modal') {
      this.animateLabelModalOpen(modal);
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (!modal) {
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (modal.classList.contains('closing')) {
      return;
    }

    // –î–ª—è –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –∞–Ω–∏–º–∞—Ü–∏–∏
    if (modalId === 'checkout-modal') {
      this.animateCheckoutModalClose(modal);
    } else if (modalId === 'label-modal') {
      this.animateLabelModalClose(modal);
    }
  }

  // JavaScript –∞–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ª–µ–π–±–ª–æ–≤
  animateLabelModalOpen(modal) {
    const content = modal.querySelector('.modal-content');
    if (!content) return;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    modal.classList.add('show');
    modal.style.opacity = '1';
    modal.style.visibility = 'visible';
    const baseAlpha = 0.5;
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω —Å—Ä–∞–∑—É –Ω–∞ 0, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–æ–∫–∞–∑–∞ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è
    modal.style.background = 'rgba(0,0,0,0)';
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    content.style.transform = 'translateY(100%)';
    content.style.transition = 'none';
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    const duration = 300;
    const startTime = Date.now();
    
    const animate = () => {
      const elapsed = Date.now() - startTime;
      const progress = Math.min(elapsed / duration, 1);
      
      // Easing function (ease out cubic)
      const easeProgress = 1 - Math.pow(1 - progress, 3);
      
      // –ê–Ω–∏–º–∏—Ä—É–µ–º transform
      const translateY = (1 - easeProgress) * 100;
      content.style.transform = `translateY(${translateY}%)`;
      // –ü–ª–∞–≤–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
      modal.style.background = `rgba(0, 0, 0, ${baseAlpha * easeProgress})`;
      
      if (progress < 1) {
        requestAnimationFrame(animate);
      } else {
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        content.style.transform = 'translateY(0)';
        content.style.transition = '';
        modal.style.background = `rgba(0, 0, 0, ${baseAlpha})`;
      }
    };
    
    requestAnimationFrame(animate);
  }

  // JavaScript –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ª–µ–π–±–ª–æ–≤ - —Ç–æ–ª—å–∫–æ transform, "—É–µ–∑–∂–∞–µ—Ç –≤–Ω–∏–∑"
  animateLabelModalClose(modal) {
    const content = modal.querySelector('.modal-content');
    if (!content) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (modal.classList.contains('closing')) {
      return;
    }

    // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–µ—Å—è
    modal.classList.add('closing');
    modal.classList.remove('dragging');
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–∫—Ä—ã—Ç–∏—è
    const duration = 300;
    const startTime = Date.now();
    const baseAlpha = 0.5;
    
    const animate = () => {
      const elapsed = Date.now() - startTime;
      const progress = Math.min(elapsed / duration, 1);
      
      // Easing function (ease in cubic)
      const easeProgress = Math.pow(progress, 3);
      
      // –ê–Ω–∏–º–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ transform - "—É–µ–∑–∂–∞–µ—Ç –≤–Ω–∏–∑"
      const translateY = easeProgress * 100;
      content.style.transform = `translateY(${translateY}%)`;
      modal.style.background = `rgba(0, 0, 0, ${baseAlpha * (1 - easeProgress)})`;
      
      if (progress < 1) {
        requestAnimationFrame(animate);
      } else {
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        modal.classList.remove('show');
        modal.classList.remove('closing');
        modal.style.opacity = '';
        modal.style.visibility = '';
        content.style.transform = '';
        content.style.transition = '';
        modal.style.background = '';
        
        this.activeModal = null;
        this.unlockScroll();
      }
    };
    
    requestAnimationFrame(animate);
  }

  // JavaScript –∞–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ - –ö–û–ü–ò–Ø –∞–Ω–∏–º–∞—Ü–∏–∏ –ª–µ–π–±–ª–æ–≤
  animateCheckoutModalOpen(modal) {
    const content = modal.querySelector('.checkout-modal');
    if (!content) return;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    modal.classList.add('show');
    modal.style.opacity = '1';
    modal.style.visibility = 'visible';
    const baseAlpha = 0.5;
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω —Å—Ä–∞–∑—É –Ω–∞ 0, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–æ–∫–∞–∑–∞ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è
    modal.style.background = 'rgba(0,0,0,0)';
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    content.style.transform = 'translateY(100%)';
    content.style.transition = 'none';
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    const duration = 300;
    const startTime = Date.now();
    
    const animate = () => {
      const elapsed = Date.now() - startTime;
      const progress = Math.min(elapsed / duration, 1);
      
      // Easing function (ease out cubic)
      const easeProgress = 1 - Math.pow(1 - progress, 3);
      
      // –ê–Ω–∏–º–∏—Ä—É–µ–º transform
      const translateY = (1 - easeProgress) * 100;
      content.style.transform = `translateY(${translateY}%)`;
      // –ü–ª–∞–≤–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
      modal.style.background = `rgba(0, 0, 0, ${baseAlpha * easeProgress})`;
      
      if (progress < 1) {
        requestAnimationFrame(animate);
      } else {
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        content.style.transform = 'translateY(0)';
        content.style.transition = '';
        modal.style.background = `rgba(0, 0, 0, ${baseAlpha})`;
      }
    };
    
    requestAnimationFrame(animate);
  }

  // JavaScript –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ - –ö–û–ü–ò–Ø –∞–Ω–∏–º–∞—Ü–∏–∏ –ª–µ–π–±–ª–æ–≤
  animateCheckoutModalClose(modal) {
    const content = modal.querySelector('.checkout-modal');
    if (!content) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (modal.classList.contains('closing')) {
      return;
    }

    // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–µ—Å—è
    modal.classList.add('closing');
    modal.classList.remove('dragging');
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–∫—Ä—ã—Ç–∏—è
    const duration = 300;
    const startTime = Date.now();
    const baseAlpha = 0.5;
    
    const animate = () => {
      const elapsed = Date.now() - startTime;
      const progress = Math.min(elapsed / duration, 1);
      
      // Easing function (ease in cubic)
      const easeProgress = Math.pow(progress, 3);
      
      // –ê–Ω–∏–º–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ transform - "—É–µ–∑–∂–∞–µ—Ç –≤–Ω–∏–∑"
      const translateY = easeProgress * 100;
      content.style.transform = `translateY(${translateY}%)`;
      modal.style.background = `rgba(0, 0, 0, ${baseAlpha * (1 - easeProgress)})`;
      
      if (progress < 1) {
        requestAnimationFrame(animate);
      } else {
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        modal.classList.remove('show');
        modal.classList.remove('closing');
        modal.style.opacity = '';
        modal.style.visibility = '';
        content.style.transform = '';
        content.style.transition = '';
        modal.style.background = '';
        
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è checkout-modal
        if (modal.id === 'checkout-modal') {
          this.currentPaymentData = null;
        }
        
        this.activeModal = null;
        this.unlockScroll();
      }
    };
    
    requestAnimationFrame(animate);
  }

  // –ê–Ω–∏–º–∞—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
  animateModalReturn(modal, content, currentDeltaY) {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ —Ç—É –∂–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å/–∫—Ä–∏–≤—É—é, –∫–∞–∫ –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ
    const contentHeight = content.offsetHeight || Math.min(window.innerHeight * 0.7, window.innerHeight);
    const startPercent = Math.max(0, Math.min(100, (currentDeltaY / contentHeight) * 100));
    const duration = 300;
    const startTime = Date.now();
    const baseAlpha = 0.5;

    const animate = () => {
      const elapsed = Date.now() - startTime;
      const progress = Math.min(elapsed / duration, 1);
      
      // Easing function (ease out)
      const easeProgress = 1 - Math.pow(1 - progress, 3);
      const currentPercent = startPercent + (0 - startPercent) * easeProgress;
      content.style.setProperty('transform', `translateY(${currentPercent}%)`, 'important');
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤–≤–µ—Ä—Ö
      const overlayAlpha = baseAlpha * (1 - currentPercent / 100);
      modal.style.background = `rgba(0, 0, 0, ${overlayAlpha})`;
      
      if (progress < 1) {
        requestAnimationFrame(animate);
      } else {
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        content.style.transform = 'translateY(0)';
        content.style.transition = '';
        modal.style.background = `rgba(0, 0, 0, ${baseAlpha})`;
      }
    };

    requestAnimationFrame(animate);
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —á–µ—Ä–µ–∑ drag (–ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ) - –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
  closeDragModal(modal, content, currentDeltaY) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (modal.classList.contains('closing')) {
      return;
    }

    // –ü–æ–º–µ—á–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–∞–∫ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–µ—Å—è –∏ —É–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    modal.classList.add('closing');
    modal.classList.remove('dragging');

    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    
    // –ü–ª–∞–≤–Ω–æ –∞–Ω–∏–º–∏—Ä—É–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –∏–∑ —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∫–∞–∫ –≤ –æ–±—ã—á–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    const contentHeight = content.offsetHeight || Math.min(window.innerHeight * 0.7, window.innerHeight);
    const startPercent = Math.max(0, Math.min(100, (currentDeltaY / contentHeight) * 100));
    // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–∞ –æ—Å—Ç–∞–≤—à–µ–º—É—Å—è –ø—É—Ç–∏, —á—Ç–æ–±—ã –æ–≤–µ—Ä–ª–µ–π –Ω–µ –∑–∞–≤–∏—Å–∞–ª
    const remaining = 100 - startPercent;
    const duration = Math.max(120, Math.round(300 * (remaining / 100))); // –æ—Ç 120–º—Å –¥–æ 300–º—Å
    const startTime = Date.now();
    const baseAlpha = 0.5;

    const animate = () => {
      const elapsed = Date.now() - startTime;
      const progress = Math.min(elapsed / duration, 1);
      
      // Easing function (ease out)
      const easeProgress = 1 - Math.pow(1 - progress, 3);
      
      const currentPercent = startPercent + (100 - startPercent) * easeProgress;
      
      // –ê–Ω–∏–º–∏—Ä—É–µ–º transform –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö, –∫–∞–∫ –≤ –æ–±—ã—á–Ω–æ–º –∑–∞–∫—Ä—ã—Ç–∏–∏
      content.style.setProperty('transform', `translateY(${currentPercent}%)`, 'important');
      // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –≥–∞—Å–∏–º –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –æ–≤–µ—Ä–ª–µ—è –¥–æ –Ω—É–ª—è
      const overlayAlpha = baseAlpha * (1 - currentPercent / 100);
      modal.style.background = `rgba(0, 0, 0, ${overlayAlpha})`;
      
      if (progress < 1) {
        requestAnimationFrame(animate);
      } else {
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        modal.classList.remove('show');
        modal.classList.remove('closing');
        modal.style.opacity = '';
        modal.style.visibility = '';
        modal.style.background = '';
        content.style.transform = '';
        content.style.transition = '';
        
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if (modal.id === 'checkout-modal') {
          this.currentPaymentData = null;
        }
        
        this.activeModal = null;
        this.unlockScroll();
      }
    };

    requestAnimationFrame(animate);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é"
  handleCheckoutProceed() {
    if (!this.currentPaymentData) {
      this.showError('–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    this.closeModal('checkout-modal');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –∑–∞–∫–∞–∑–∞
    const orderId = this.generateOrderId();
    
    // –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    const description = `${this.currentPaymentData.productTitle} - ${this.currentPaymentData.variant}, ${this.currentPaymentData.period}, ${this.currentPaymentData.edition}`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é
    this.showSuccess(`‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞ #${orderId}`);
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è:
    // - –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    // - –û—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram Bot API  
    // - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    
    console.log('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞:', {
      orderId,
      description,
      paymentData: this.currentPaymentData
    });
  }



  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –∑–∞–∫–∞–∑–∞
  generateOrderId() {
    const timestamp = Date.now();
    const random = Math.floor(Math.random() * 1000);
    return `ORDER_${timestamp}_${random}`;
  }

  // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  showMessage(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      background: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : '#2196F3'};
      color: white;
      padding: 12px 24px;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 500;
      z-index: 30000;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
      animation: slideInDown 0.3s ease;
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.style.animation = 'slideOutUp 0.3s ease';
      setTimeout(() => {
        if (notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      }, 300);
    }, 3000);
  }

  showSuccess(message) {
    this.showMessage(message, 'success');
  }

  showError(message) {
    this.showMessage(message, 'error');
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–µ–π–±–ª–µ
  getLabelInfo(labelText) {
    const labelData = {
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': {
        title: '–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞',
        description: '–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –≤—Å–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã. –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é –ø—Ä–æ–¥—É–∫—Ç–∞, –º—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∑–∞–º–µ–Ω–∏–º –µ–≥–æ –∏–ª–∏ –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏.',
        icon: 'üõ°Ô∏è',
        iconClass: 'guarantee'
      },
      '–õ–∏—Ü–µ–Ω–∑–∏—è': {
        title: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è',
        description: '–í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ª–∏—Ü–µ–Ω–∑–∏—è–º–∏ –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–µ–≥–∞–ª—å–Ω—ã–π –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.',
        icon: 'üìú',
        iconClass: 'license'
      },
      '–ù—É–∂–µ–Ω VPN': {
        title: '–¢—Ä–µ–±—É–µ—Ç—Å—è VPN',
        description: '–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ. –≠—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–µ VPN-—Å–µ—Ä–≤–∏—Å—ã.',
        icon: 'üåê',
        iconClass: 'vpn'
      }
    };

    return labelData[labelText] || {
      title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
      description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ.',
      icon: 'üí°',
      iconClass: 'guarantee'
    };
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
export default ModalManager; 